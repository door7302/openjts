version: "3.8"
services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    user: root
    environment:
      - INFLUXDB_DB=jtsdb
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - /var/log:/var/log
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
      - ./influxdb/data:/var/lib/influxdb
  telegraf_vmx:
    build: https://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@github.com/door7302/jts_telegraf.git#main
    container_name: telegraf_vmx
    restart: always
    user: root
    depends_on:
      - influxdb
    volumes:
      - /var/log:/var/log
      - ./telegraf/vmx:/etc/telegraf/
      - ./telegraf/metadata:/var/metadata
      - ./telegraf/cert:/var/cert
    command:
      --config-directory /etc/telegraf/telegraf.d
  telegraf_mx:
    build: https://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@github.com/door7302/jts_telegraf.git#main
    container_name: telegraf_mx
    restart: always
    user: root
    depends_on:
      - influxdb
    volumes:
      - /var/log:/var/log
      - ./telegraf/mx:/etc/telegraf/
      - ./telegraf/metadata:/var/metadata
      - ./telegraf/cert:/var/cert
    command:
      --config-directory /etc/telegraf/telegraf.d
  telegraf_ptx:
    build: https://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@github.com/door7302/jts_telegraf.git#main
    container_name: telegraf_ptx
    restart: always
    user: root
    depends_on:
      - influxdb
    volumes:
      - /var/log:/var/log
      - ./telegraf/ptx:/etc/telegraf/
      - ./telegraf/metadata:/var/metadata
      - ./telegraf/cert:/var/cert
    command:
      --config-directory /etc/telegraf/telegraf.d
  telegraf_acx:
    build: https://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@github.com/door7302/jts_telegraf.git#main
    container_name: telegraf_acx
    restart: always
    user: root
    depends_on:
      - influxdb
    volumes:
      - /var/log:/var/log
      - ./telegraf/acx:/etc/telegraf/
      - ./telegraf/metadata:/var/metadata
      - ./telegraf/cert:/var/cert
    command:
      --config-directory /etc/telegraf/telegraf.d
  kapacitor:
    image: kapacitor:latest
    container_name: kapacitor
    restart: always
    user: root
    depends_on:
      - influxdb
    ports:
      - '9092:9092'
    volumes:
      - /var/log:/var/log
      - ./kapacitor/kapacitor.conf:/etc/kapacitor/kapacitor.conf
      - ./kapacitor/data:/var/lib/kapacitor
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    user: root
    depends_on:
      - influxdb
    ports:
      - '${GRAFANA_PORT}:3000'
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/home.json
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=yesoreyeram-boomtable-panel
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/cert:/tmp
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/data:/var/lib/grafana
      - ./grafana/plugins:/var/lib/grafana/plugins
  jtso:
    build: https://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@github.com/door7302/jtso.git#main
    container_name: jtso
    restart: always
    user: root
    volumes:
      - /var/log:/var/log
      - ./jtso/jtso.db:/etc/jtso/jtso.db
      - ./jtso/config.yml:/etc/jtso/config.yml
      - ./jtso/cert:/var/cert
      - ./jtso/profiles:/var/profiles
      - ./jtso/active_profiles:/var/active_profiles
      - ./telegraf:/var/shared/telegraf
      - ./telegraf/metadata:/var/metadata
      - ./grafana/data:/var/shared/grafana
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '${JTSO_PORT}:8081'
